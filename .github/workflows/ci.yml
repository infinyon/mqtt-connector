name: CI

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  merge_group:
  pull_request:
    branches: [main]
    paths:
      - "**"
      - "!/*.md"
      - "!/**.md"

jobs:
  check:
    name: Rust Check - ${{ matrix.check }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable]
        rust-target: [x86_64-unknown-linux-musl]
        check: [test, check, fmt, clippy]
    env:
      RUST_BACKTRACE: full
      RUSTV: ${{ matrix.rust }}
      TARGET: ${{ matrix.rust-target }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          target: ${{ matrix.rust-target }}
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.rust-target }}-${{ matrix.check }}
      - name: Cargo test
        if: ${{ matrix.check == 'test' }}
        run: |
          cargo test
      - name: Cargo check
        if: ${{ matrix.check == 'check' }}
        run: |
          cargo check --all-targets

      - name: Cargo fmt
        if: ${{ matrix.check == 'fmt' }}
        run: cargo fmt -- --check

      - name: Cargo clippy
        if: ${{ matrix.check == 'clippy' }}
        run: cargo clippy --all-targets -- -D warnings

  integration_tests:
    name: Integration testing on - ${{ matrix.os }}.
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        rust-target: [x86_64-unknown-linux-musl]
    env:
      RUST_BACKTRACE: full
    steps:
      - uses: actions/checkout@v4
      - name: Install musl-tools
        run: |
          set -ex
          sudo apt-get update
          sudo apt-get install -y musl-tools
      - uses: AbsaOSS/k3d-action@v2.4.0
        name: "Create fluvio k3d Cluster"
        with:
          cluster-name: "fluvio"
          args: --timeout 5m
      - name: Ensure k3d cluster is ready
        run: |
          sleep 5
          ./actions/k3d-check.sh

      - name: Install Fluvio Local Cluster
        timeout-minutes: 10
        uses: infinyon/fluvio@master
        with:
          cluster-type: k3d
          version: 0.10.15
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          target: ${{ matrix.rust-target }}
          override: true

      - name: Check Fluvio Installation
        run: |
          sleep 10
          fluvio version
          fluvio topic list
          fluvio topic create foobar
          sleep 3
          echo foo | fluvio produce foobar
          fluvio consume foobar -B -d

      - name: Install Fluvio CDK
        run: fluvio install cdk --develop # TODO: remove --develope when cdk will be available for public usage

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-musl
      - name: Run Integration Test
        timeout-minutes: 20
        run: make integration_tests

  done:
    name: Done
    needs:
      - check
      - integration_tests
    runs-on: ubuntu-latest
    steps:
      - name: Dump needs context
        env:
          CONTEXT: ${{ toJson(needs) }}
        run: |
          echo -e "\033[33;1;4mDump context\033[0m"
          echo -e "$CONTEXT\n"
      - name: Report failure on cancellation
        if: ${{ contains(needs.*.result, 'cancelled') || cancelled() }}
        run: exit 1
      - name: Failing test and build
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
      - name: Don't allow skipped
        if: ${{ contains(needs.*.result, 'skipped')  && github.event_name == 'merge_group' }}
        run: exit 1
      - name: Successful test and build
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Done
        run: echo "Done!"
