name: CI

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  pull_request:
    branches: [main]
    paths:
      - "**"
      - "!/*.md"
      - "!/**.md"

jobs:
  check:
    name: Rust Check - ${{ matrix.check }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable]
        rust-target: [x86_64-unknown-linux-gnu]
        check: [test, check, fmt, clippy]
    env:
      RUST_BACKTRACE: full
      RUSTV: ${{ matrix.rust }}
      TARGET: ${{ matrix.rust-target }}
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy

      - name: Setup Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.rust-target }}-${{ matrix.check }}

      - name: Cargo test
        if: ${{ matrix.check == 'test' }}
        run: |
          cargo test

      - name: Cargo check
        if: ${{ matrix.check == 'check' }}
        run: |
          cargo check --all-targets

      - name: Cargo fmt
        if: ${{ matrix.check == 'fmt' }}
        run: cargo fmt -- --check

      - name: Cargo clippy
        if: ${{ matrix.check == 'clippy' }}
        run: cargo clippy --all-targets -- -D warnings

  integration_tests:
    name: Integration testing on - ${{ matrix.os }}.
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    env:
      RUST_BACKTRACE: full
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: "Create fluvio k3d Cluster"
        uses: AbsaOSS/k3d-action@v2.4.0
        with:
          cluster-name: "fluvio"
          args: --timeout 5m

      - name: Ensure k3d cluster is ready
        run: |
          sleep 5
          ./actions/k3d-check.sh

      - name: Install Fluvio Local Cluster
        timeout-minutes: 10
        uses: infinyon/fluvio@master
        with:
          cluster-type: k3d
          version: stable

      - name: Check Fluvio Installation
        run: make test_fluvio_install

      - name: Install Fluvio CDK
        run: fluvio install cdk --develop # TODO: remove --develope when cdk will be available for public usage

      - name: Run Integration Test
        timeout-minutes: 20
        run: make integration_tests

      - name: Setup BATS
        uses: mig4/setup-bats@v1

      - name: Install Mosquitto
        run: |
          sudo apt-add-repository ppa:mosquitto-dev/mosquitto-ppa
          sudo apt-get update
          sudo apt install -y mosquitto mosquitto-clients

      - name: Cloud E2E Tests
        timeout-minutes: 20
        env:
          FLUVIO_CLOUD_TEST_USERNAME: ${{ secrets.FLUVIO_CLOUD_TEST_USERNAME }}
          FLUVIO_CLOUD_TEST_PASSWORD: ${{ secrets.FLUVIO_CLOUD_TEST_PASSWORD }}
        run: make cloud_e2e_test
